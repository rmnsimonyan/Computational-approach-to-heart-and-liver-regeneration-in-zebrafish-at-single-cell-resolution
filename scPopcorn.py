# Popcorn for clustering accross datasets - tutorial here https://github.com/ncbi/scPopCorn
# pip install scpopcorn

# import scpopcorn package
from scpopcorn import MergeSingleCell
from scpopcorn import SingleCellData

# read in RNA-seq datasets

File1 = "data/data1.txt"
Test1 = SingleCellData()
Test1.ReadData_SeuratFormat(File1)

File2 = "data/data2.txt"
Test2 = SingleCellData()
Test2.ReadData_SeuratFormat(File2)

# normlize counts data, find highly vaiable genes, and natural logarithm of one plus of the counts data
Test1.Normalized_per_Cell()
Test1.FindHVG()
Test1.Log1P()

Test2.Normalized_per_Cell()
Test2.FindHVG()
Test2.Log1P()

# combine datasets and set number of supercells for each dataset. 
# The number of super cell can be chosen as following. If you have N cells, then you can define the number of super cell M, by letting N/M between 20 and 30.

NumSuperCell_Test1 = 50
NumSuperCell_Test2 = 50
MSingle = MergeSingleCell(Test1, Test2)
MSingle.MultiDefineSuperCell(NumSuperCell_Test1,NumSuperCell_Test2)

# compute co-membership graph within each dataset and similarity matrix across dataset

MSingle.ConstructWithinSimiarlityMat_SuperCellLevel()
MSingle.ConstructBetweenSimiarlityMat_SuperCellLevel()

# run joint partition

Estimate_NumCluster = 10 # initial guess of number of corresponding clusters, do not need to be accurate!!!
MSingle.SDP_NKcut(Estimate_NumCluster)

# rounding the results

NumCluster_Min = 3 
NumCluster_Max = 20
CResult = MSingle.NKcut_Rounding(NumCluster_Min, NumCluster_Max)

# similairty between cell subpopulations across datasets

MSingle.StatResult()

# Umap plots using the results generated by scPopCorn

MSingle.Umap_Result()
